name: tests

on:
  workflow_dispatch:
  pull_request_target:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  style-check:
    name: "tests"
    if: (github.event_name != 'pull_request' && ! github.event.pull_request.head.repo.fork) || (github.event_name == 'pull_request' && (github.event.pull_request.head.repo.fork || startsWith(github.head_ref, 'dependabot/')))
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        # see https://github.com/fortran-lang/setup-fortran:
        toolchain:
          - { compiler: gcc, version: 13 }
          - { compiler: intel, version: "2025.0" }
          - { compiler: intel-classic, version: "2021.10" }
        include:
          # ubuntu 24.04 with architecture 'x64' has no py37, use ubuntu 22.04 instead.
          - os: ubuntu-22.04
            python-version: "3.7"
        exclude:
          - os: ubuntu-latest
            python-version: "3.7"
          # macos 14.7.2 with architecture 'arm64' has no py37, excluding it.
          - os: macos-latest
            python-version: "3.7"
          # `ifx` compiler not supported on macos, excluding it.
          - os: macos-latest
            toolchain: { compiler: intel, version: "2025.0" }
          # meson fails to detect `icx` C compiler (https://github.com/mesonbuild/meson/issues/14089)
          # remove the following once meson==1.8 is released.
          - os: windows-latest
            toolchain: { compiler: intel, version: "2025.0" }
          - os: windows-latest
            toolchain: { compiler: intel-classic, version: "2021.10" }

    steps:
      - uses: actions/checkout@v4

      - uses: fortran-lang/setup-fortran@v1
        id: setup-fortran
        with:
          compiler: ${{ matrix.toolchain.compiler }}
          version: ${{ matrix.toolchain.version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv venv && uv pip install ".[testing]"

      # adding `--no-editable` to avoid https://github.com/astral-sh/uv/issues/10214
      - name: Run tests
        continue-on-error: true
        run: |
          uv run --no-editable testflo
