name: Build and upload to PyPI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  release:
    types:
      - published

jobs:
  build_sdist:
    name: Build sdist for pyspline
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build sdist
        run: pipx run build --sdist

      - name: Store artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            arch: auto64
            build: "*manylinux*"

          - os: ubuntu-22.04
            arch: auto64
            build: "*musllinux*"

          - os: ubuntu-22.04-arm
            arch: auto64
            build: "*manylinux*"

          - os: ubuntu-22.04-arm
            arch: auto64
            build: "*musllinux*"

          - os: macos-13
            arch: auto64
            build: "*"

          - os: macos-14
            arch: auto64
            build: "*"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup gfortran 13
        uses: fortran-lang/setup-fortran@v1
        id: setup-fortran
        with:
          compiler: gcc
          version: 13

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - uses: actions/setup-python@v5
        if: matrix.os == 'macos-14'
        with:
          python-version: 3.8

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23
        env:
          CIBW_BUILD: ${{ matrix.build }}
          CIBW_ARCHS: ${{ matrix.arch }}
        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"

      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: wheels-${{ strategy.job-index }}

  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mdolab-pyspline
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
